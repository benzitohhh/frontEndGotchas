
ubuntu
**********
https://help.ubuntu.com/community/KeyboardShortcuts

tilde (~) - altGR + 4
slash     - shift + 7

to open filebrowser - "nautilus ."

show desktop - Ctrl + Alt + D
Close window - Alt+F4

Open a new terminal window - ctrl + alt + X
Create tab (in terminal) - ctrl + shift + T
Close tab (in terminal)  - ctrl + shift + W
cut (in terminal)    shift-delete
copy (in terminal)    shift-ctrl-C 
paste (in terminal)    shift-ctrl-V 
To use curl to make a POST request:
	curl -d "param1=value1&param2=value2" http://example.com/resource.cgi

show hidden files - Ctrl + H
to switch between apps        - alt + tab
                  workspaces - ctrl + alt + left/right
                  apps in all workspaces - ctrl + alt + tab
Open the Applications menu - Alt + F1
Run an application by typing its name - Alt + F2
(Print Screen) - Prt Sc
Take a screenshot of the current window - Alt + Prt Sc

Minimises current window - Alt+F9 
Maximises current window - Alt+F10

Alt+Space Brings up window menu with with 'Always on Top' and 'Minimise' and 'Maximise' and above commands.

Alt+F5 Returns window to 'normal' or previous size.




MAVEN
*******
to download source/javadcocs:
	mvn eclipse:eclipse -DdownloadSources -DdownloadJavadocs

in pom.xml.... "filtering" is the process of replacing placeholders with properties
               The main/src/resources folder is an example of this
               i.e. the version in target has placeholders switched for properties

resources....
	By default, maven copies /src/main/resources/* into /target/classes/
                i.e. ends up at root level in .jar
        Can add more resources using the "resources plugin"

To use profile from root settings.xml in eclipse...
 - right click yout project and choose "properties", in "maven" set the profile





ECLIPSE
********
move line up/down    -    alt + up/down
duplicate line -          ctrl + alt + up/down  (i.e. on the numberic keypad)
delete next word      -    ctrl + delete
move to next open file   - alt + pgup/pgdown
to add SEAM/JSF support to a project
	1. make sure JBoss seam plugin is installed (part of Jboss Tools)
	2. right click project -> "configure" -> "add seam support"
to add jQuery/javascript support
	1. make sure jQueryWTP plugin is installed (http://www.langtags.com/jquerywtp/?page_id=11)
	2. right click project -> "configure" -> "convert to JavaScript project"
convert to uppercase/lowercase - ctrl + shift + x/y
find in outline - ctrl + o (then type the first few letters of a method)
create local variable from expression - alt + shift + l
word complete - Alt + /
http://www.rossenstoyanchev.org/write/prog/eclipse/eclipse3.html
comment/uncomment in xml:  ctrl + shift + c
to switch perspective - ctrl + f8
	  view		ctrl + f7
	  editor 	ctrl + f6	

http://stackoverflow.com/questions/2049834/shortcut-key-to-select-word-in-eclipse
Shift + Alt + ↑ selects enclosing elements.
Shift + Alt + ↓ reverses Shift + Alt + ↑.
Shift + Alt + ← selects enclosing elements moving up the file.
Shift + Alt + → selects enclosing elements moving down the file.


CHROME
********
To simulate internationalisation...
    quite chrome
    In terminal:
	cd /opt/google/chrome
        LANGUAGE=es ./chrome
        
apache
**********
in /usr/lib/apache2
also /etc/apache2/sites-enabled
	sudo /etc/init.d/apache2 <start|stop|restart|status>
webroot is in /var/www

php
*****
in /usr/lib/php5


tomcat
*******
to start on the commandline:
bin/catalina.sh run 


mysql
*****
in /usr/lib/mysql
my.conf is in /etc/mysql
executables are in /usr/bin
	sudo /etc/init.d/mysql <start|stop|restart|status>
mysql-query-browser
mysql -uroot     (i.e. no password)
navicat (in /usr/lib/navicat) - also icon on top panel



SVN
**********
// to only check out 1 level deep (i.e. does not recursively checkout directories...)
svn co --set-depth=files
// then to checkout particular directories
svn up --set-depth=infinity
// i.e. doing "svn info" shows depth of current dir

merging to branch...
1. get revision number (or range) to apply
2. cd into branch (and make sure branch is uptodate)

svn merge -r 6250:6251 http://glorfindel.learnvest.com/svn/app/trunk/learnvestTomcatMvn .



recursive grep
***************
grep -r <pattern> .
grep -r --include="*.html" <pattern> .



Adobe Illutrator
*****************
to change units to pixes (especially for fonts...):
Edicion -> Preferencias -> Unidades (then make sure that all units are pixels)



JQUERY
*********
find elements that start with.... jQuery("[id^='choice']")
find elements that end with.... jQuery("[id$='Travel']")



SUBLIMETEXT
************
Navigation/Goto Anywhere
Keypress  Command
Ctrl + P  Quick-open files by name
Ctrl + R  Goto symbol
Ctrl + ;  Goto word in current file
Ctrl + G  Goto line in current file
Ctrl + d  Highlight current word, click again and keeps highlighting similar words further on (great for refactoring...)
Ctrl + d, then F3   -    jump to selected symbol
          also shift F3 - to jump back

ctrl shift space    - expand selection to scope   (generally useful)
ctrl shift m        -                  to brackets (like space, but less granular control)
ctrl shift a        -                  to tag   (really useful for changing a tag's type)

ctrl shift p      Command Palete - really useful!

ctrl kb    hide/show sidebar

ctrl j     join selected lines

Javascript format code - ctrl+alt+f   (JsFormat package)

package control:
http://wbond.net/sublime_packages/package_control/usage
(once installed, access it vis sublimeTextś "control+shift+p" menu)

alignment
http://wbond.net/sublime_packages/alignment#Installation
 - ctrl alt a   // alligns selected!

quick search
    ctrl i (as you type, then enter out, or esc to cancel)


find and replace
  ctrl f, then f3 or shift f3  (esc out)
        - alt r  // use regex
        - alt enter // find and select all
  ctrl shift f  // find in multiple files
  ctrl e - add current selected word to "find" buffer
  ctrl + shift + e - add current selected word to "replace" buffer
  ctrl h  - opens find and replace console.
  ctrl h AND THEN ctrl + alt + enter    - replace all in selection
  ctrl h AND THEN ctrl + shift + h      - replace next

new html doc snippet
  new <tab>

open in new chrome tab
  (make sure the "open in chrome" build script is selected, then ctrl + b)

layouts
  one column  - shift alt 1
  two columns - shift alt 2




zen coding -learn this!
*********
ctrl alt a                                // to go to koan mode
div#page>div.logo+ul#navigation>li*5>a    // try it!
#page>.logo+ul#navigation>li*5>a          // also, no need to use "div"

.thing$*9                                 // use $ to enumerate
.thing$$$*200                             // use $$$$$ to enumerate to x places

(.section>.hello+.bye)*5                  // group by parentheses
p{click}                                  // text in curly brackets

commands.... do a ctrl shift p, for "zen". But here are some anyways...

ctrl .            // move to next/prev edit point
ctrl ,                 
ctrl alt .        // move to and select next/prev attribute or tagname
ctrl alt ,

ctrl alt n       // move to matching tag
ctrl shift a     // select start and end tag names
ctrl shift j     // split or join tag

ctrl j           // merge lines
ctrl shift t     // select everything in between tags
ctrl shift n     // select everything in between tags (repeat to expand scope to enclosing)

shift alt w      // wrap enclosed in a tag (edit as koan as you type live!)
                 // if nothing selected:
                 //     if caret is inside opening/closing tag, searches for tag bounds and wraps them
                 //     if caret is inside tag content, it search for content bounds and wraps them

ctrl shift u      // delete tag (remove opening and closing tag, out-dents enclosed content)






Eclipse - the eclipse sourcecode
********************************
http://www.vogella.com/articles/EclipseCodeAccess/article.html

eclipse spy - alt + shift + F1   (gives info on current component)
              alt + shift + F2   (for menus)

*** possibly undo -  
      window -> preferences -> plug-in development "include all plug-ins from target in java search"





Groovy
************

star ("*") operator - extract list
    i.e.
            result = user.addresses*.zip

      is equivalent to

            List result;
            for address in user.addresses {
              list.add(address.zip)
            }

  map literal
  ************
    [key1:val1, key2:val2]






Git
****
    git diff            // compares working directory <-> staging
    git diff --staged   // compares staging <-> latest commit

    git commit -a       // adds all tracked files, and commits them

    git branch           // show all branches
    git branch -v -a     // show summary of all branches
    git branch <name>    // create new branch
    git branch -d <name> // delete branch
    git branch --merged    // show all merged branches
    git branch --no-merged // show all non-merged branches
    git checkout -b <name> // create new branch and switch into it


    git log                     // shows new commits, and their ids (hashes)
    git log -p                  // show log, but with diffs
    git log -p -3               // limits to the last 3 commits
    git log --stat              // shows some useful statics
    git log --pretty=oneline    // useful oneline log
    git checkout <commitHash>   // checkouts out a previous commit to a temporary branch
    git checkout -b <some>      // creates a new branch from the current, and switches to it.

    git rm <fileName>           // removes a file from git
    git rm --cached <filename>  // removes file from staging, but NOT from local (i.e. great if you accidentally commit a log file or something like that...)

    git commit -m 'initial commit'
    git add forgotten_file           // really useful if you forget to commit a file
    git commit --amend               //

    git reset HEAD <file>     // to unstage a file

    git pull  // fetches and merges from origin

    git push <remoteName> <branchName>

    //!!!!! REMEMBER - a branch in git is simply a lightweight movable pointer to a commit !!!! ///
    //               - HEAD is a pointer to the branch you are currently on
    //               - upon commiting, the branch pointer (and possibly HEAD) is automatically moved.

    git show <commitNumber>             // shows the diff of a particular commit
    git show --name-only <commitNumber> // shows the files of a particular commit

      













